<?xml version="1.0" encoding="UTF-8"?>
<rss  xmlns:atom="http://www.w3.org/2005/Atom" 
      xmlns:media="http://search.yahoo.com/mrss/" 
      xmlns:content="http://purl.org/rss/1.0/modules/content/" 
      xmlns:dc="http://purl.org/dc/elements/1.1/" 
      version="2.0">
<channel>
<title>Luke Ashton</title>
<link>https://luke-ashton.netlify.app/blog.html</link>
<atom:link href="https://luke-ashton.netlify.app/blog.xml" rel="self" type="application/rss+xml"/>
<description>This is Luke Ashton&#39;s personal blog.</description>
<generator>quarto-1.3.433</generator>
<lastBuildDate>Thu, 28 Dec 2023 13:00:00 GMT</lastBuildDate>
<item>
  <title>Analysing Strava data in R.</title>
  <dc:creator>Luke Ashton</dc:creator>
  <link>https://luke-ashton.netlify.app/posts/strava-api-analysis/index.html</link>
  <description><![CDATA[ 




<section id="introduction" class="level2">
<h2 class="anchored" data-anchor-id="introduction">Introduction</h2>
<p>With most of Australia closed between Christmas and New Years, I’ve found myself with some free time. This time for reflection has allowed me to consider potential goals for the coming year and, more importantly, my blasé attitude towards my physical health in the past year. <sup>1</sup></p>
<p>I’ve always enjoyed having some physical goals for the year ahead, and some recent family health problems have reminded me of significance of prioritising one’s physical health.</p>
<p>However, before setting specific goals I like to review my past training to help me understand where to start and how to map out the process of getting into better shape.</p>
<p>So, being the nerd that I am, I thought it would be fun to pull my running data from Strava using their API. Before getting started with this mini-project, I noticed that there wasn’t a clear pathway for R-users to obtain activity-level data from the Strava API in bulk - so hopefully this is useful to someone at some point! I am also somewhat underwhelmed by the analytic capabilities of the Strava app - especially if someone doesn’t want to pay $15/month in subscription fees!</p>
</section>
<section id="inspiration" class="level2">
<h2 class="anchored" data-anchor-id="inspiration">Inspiration</h2>
<p>Before moving forward I want to acknowledge that part of my motivation for re-engaging with the Strava API comes from <a href="https://ikashnitsky.phd/">Ilya Kashnitsky’s</a> beautiful heatmap, pictured below. He created it by taking aggregate-level polylines from each of his activities and plotting them on an inset map - pretty cool and the code for it can be found <a href="https://github.com/ikashnitsky/30DayMapChallenge/blob/main/src/20-outdoors-strava.R">here</a>!</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://luke-ashton.netlify.app/posts/strava-api-analysis/images/ikashnitsky_strava_map.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">A really cool colour-inverted heatmap from Ilya’s Strava runs!</figcaption>
</figure>
</div>
</section>
<section id="loading-libraries-and-registering-for-the-api" class="level2">
<h2 class="anchored" data-anchor-id="loading-libraries-and-registering-for-the-api">Loading libraries and registering for the API</h2>
<p>Back to the task at hand, though! First, we’ll need to load the following libraries which will form the foundation for most of our wrangling and analysis.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb1" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb1-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A gentle reminder to call install.packages("package_name_here") if you don't have any of these installed already!</span></span>
<span id="cb1-2"></span>
<span id="cb1-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(tidyverse)</span>
<span id="cb1-4"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(rStrava) </span>
<span id="cb1-5"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">library</span>(patchwork)</span></code></pre></div>
</details>
</div>
<p>Now, to access the Strava API. For this, you will need to register for this ‘service’ <a href="https://www.strava.com/settings/api">here</a> <sup>2</sup>.</p>
<p>Once you’ve done this, you will be prompted to name your app and to provide a website URL for it. For the URL, I just used my Strava athlete profile <sup>3</sup>. After inputting this information, you should be directed to a page with your ‘client id’ and your ‘client secret’ - these are both necessary for accessing the API and, Strava reminds you, shouldn’t be shared with anyone!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb2" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb2-1">app_name <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Put your app name here"</span></span>
<span id="cb2-2">client_id <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Put your client id here"</span></span>
<span id="cb2-3">client_secret <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Put your client secret here"</span></span></code></pre></div>
</details>
</div>
<p>Then, with this information we can create an API request! I’ll first create an object that we can call any time we need to make a request.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb3" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb3-1">stoken <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> httr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">config</span>(</span>
<span id="cb3-2">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">token =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">strava_oauth</span>(</span>
<span id="cb3-3">    app_name, </span>
<span id="cb3-4">    client_id, </span>
<span id="cb3-5">    client_secret, </span>
<span id="cb3-6">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">app_scope =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"activity:read_all"</span>,</span>
<span id="cb3-7">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cache =</span> <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">TRUE</span>)</span>
<span id="cb3-8">  )</span></code></pre></div>
</details>
</div>
</section>
<section id="aggregated-activity-data" class="level2">
<h2 class="anchored" data-anchor-id="aggregated-activity-data">Aggregated activity data</h2>
<p>However, one limitation of the standard API and the RStrava package is that most of the simpler functions only provide aggregated activity data. For instance, the following code creates an activity list with some topline stats from the 412 activities I’ve logged with Strava. There’s also a line in there to prevent any new activities from popping up if I ever need to re-run this!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb4" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb4-1">activity.list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> stoken <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_activity_list</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">compile_activities</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb4-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(start_date_local <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&lt;</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.Date</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"2023-12-29"</span>))</span>
<span id="cb4-5"></span>
<span id="cb4-6"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(activity.list)</span></code></pre></div>
</details>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[""],"name":["_rn_"],"type":[""],"align":["left"]},{"label":["achievement_count"],"name":[1],"type":["dbl"],"align":["right"]},{"label":["athlete.id"],"name":[2],"type":["chr"],"align":["left"]},{"label":["athlete.resource_state"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["athlete_count"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["average_heartrate"],"name":[5],"type":["chr"],"align":["left"]},{"label":["average_speed"],"name":[6],"type":["dbl"],"align":["right"]},{"label":["comment_count"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["commute"],"name":[8],"type":["chr"],"align":["left"]},{"label":["display_hide_heartrate_option"],"name":[9],"type":["chr"],"align":["left"]},{"label":["distance"],"name":[10],"type":["dbl"],"align":["right"]},{"label":["elapsed_time"],"name":[11],"type":["dbl"],"align":["right"]},{"label":["elev_high"],"name":[12],"type":["dbl"],"align":["right"]},{"label":["elev_low"],"name":[13],"type":["dbl"],"align":["right"]},{"label":["end_latlng1"],"name":[14],"type":["dbl"],"align":["right"]},{"label":["end_latlng2"],"name":[15],"type":["dbl"],"align":["right"]},{"label":["external_id"],"name":[16],"type":["chr"],"align":["left"]},{"label":["flagged"],"name":[17],"type":["chr"],"align":["left"]},{"label":["from_accepted_tag"],"name":[18],"type":["chr"],"align":["left"]},{"label":["gear_id"],"name":[19],"type":["chr"],"align":["left"]},{"label":["has_heartrate"],"name":[20],"type":["chr"],"align":["left"]},{"label":["has_kudoed"],"name":[21],"type":["chr"],"align":["left"]},{"label":["heartrate_opt_out"],"name":[22],"type":["chr"],"align":["left"]},{"label":["id"],"name":[23],"type":["dbl"],"align":["right"]},{"label":["kudos_count"],"name":[24],"type":["dbl"],"align":["right"]},{"label":["location_country"],"name":[25],"type":["chr"],"align":["left"]},{"label":["manual"],"name":[26],"type":["chr"],"align":["left"]},{"label":["map.id"],"name":[27],"type":["chr"],"align":["left"]},{"label":["map.resource_state"],"name":[28],"type":["dbl"],"align":["right"]},{"label":["map.summary_polyline"],"name":[29],"type":["chr"],"align":["left"]},{"label":["max_heartrate"],"name":[30],"type":["chr"],"align":["left"]},{"label":["max_speed"],"name":[31],"type":["dbl"],"align":["right"]},{"label":["moving_time"],"name":[32],"type":["dbl"],"align":["right"]},{"label":["name"],"name":[33],"type":["chr"],"align":["left"]},{"label":["photo_count"],"name":[34],"type":["dbl"],"align":["right"]},{"label":["pr_count"],"name":[35],"type":["chr"],"align":["left"]},{"label":["private"],"name":[36],"type":["chr"],"align":["left"]},{"label":["resource_state"],"name":[37],"type":["dbl"],"align":["right"]},{"label":["sport_type"],"name":[38],"type":["chr"],"align":["left"]},{"label":["start_date"],"name":[39],"type":["chr"],"align":["left"]},{"label":["start_date_local"],"name":[40],"type":["chr"],"align":["left"]},{"label":["start_latlng1"],"name":[41],"type":["dbl"],"align":["right"]},{"label":["start_latlng2"],"name":[42],"type":["dbl"],"align":["right"]},{"label":["timezone"],"name":[43],"type":["chr"],"align":["left"]},{"label":["total_elevation_gain"],"name":[44],"type":["dbl"],"align":["right"]},{"label":["total_photo_count"],"name":[45],"type":["dbl"],"align":["right"]},{"label":["trainer"],"name":[46],"type":["chr"],"align":["left"]},{"label":["type"],"name":[47],"type":["chr"],"align":["left"]},{"label":["upload_id"],"name":[48],"type":["chr"],"align":["left"]},{"label":["upload_id_str"],"name":[49],"type":["chr"],"align":["left"]},{"label":["utc_offset"],"name":[50],"type":["chr"],"align":["left"]},{"label":["visibility"],"name":[51],"type":["chr"],"align":["left"]},{"label":["average_cadence"],"name":[52],"type":["chr"],"align":["left"]},{"label":["average_temp"],"name":[53],"type":["chr"],"align":["left"]},{"label":["average_watts"],"name":[54],"type":["dbl"],"align":["right"]},{"label":["device_watts"],"name":[55],"type":["chr"],"align":["left"]},{"label":["kilojoules"],"name":[56],"type":["dbl"],"align":["right"]},{"label":["workout_type"],"name":[57],"type":["chr"],"align":["left"]}],"data":[{"1":"0","2":"31921497","3":"1","4":"1","5":"NA","6":"4.4424","7":"0","8":"FALSE","9":"FALSE","10":"3.3523","11":"2767","12":"126.5","13":"85.3","14":"-33.71870","15":"151.1500","16":"97FC79F1-0AF9-408C-8620-E057A55327E5-activity.fit","17":"FALSE","18":"FALSE","19":"g14059828","20":"FALSE","21":"FALSE","22":"FALSE","23":"10448718656","24":"0","25":"Australia","26":"FALSE","27":"a10448718656","28":"2","29":"htxlEonpy[@FB?BBJGR@d@Wn@?BEB@HI@IKIO@GCIO@KCSISIE[KK@KEE@]IMKIAAEG?MIQAECWQ?KMSEQEc@CEA_@@G?KCG@ESk@C_@CCGMIGM?IEOOGAW]YSIUICKKMGe@CI@UE?CA?CGEAGOYMSACBUBSTGAIHM?OKGQWc@MGSSG?CEM]?]Oc@UIQCIKGKUKQAECI?ACICUOo@HIE_@FKEQ?E@MAIC_@q@IAAGEAKAYNK@KFUDK?C@I@GBUOU?EIa@CECG@_@GIBG?MEKK]CGEU@OE_@CGBMA_@DOAIE?IKI?EGGKIE?CGIAe@DWAo@NIHWB_@VG@UJOCK@e@GICIICYI[CAWCQGQBO@UKIASDSE_@?M@MFM?MGQAKGI@EEUC?AC@GCBDLDFJ^FBBB?^NB?BGZSLAZ@LKJC\\\\JPJNAPDJEFBLPFJ@NFHBAPHP?FHNFFANOT@NABENC\\\\MVQR?TQVAFBLJPHDFd@VP?DCNBTCV@L?RHDBZ@HLLGP?JFD?L@^PJCHDHJJ@RCXBPEPMj@GLL\\\\DRRDPD?HN@AFDHCNORGTBNAf@LN@PHNLNBBCHFD@VPLPTBTZNn@@VLLJDh@t@PJPXHBP?JGPODOHGRGLHVZ?DHHPLPCTBVJDHB?LLRJHPRLBHLPJBNPFBNLN\\\\?LHd@@XDJBf@ADF^BHBBJTD@RIXN@@NBTLDARJVDJHNBVHHFFNAPHVJNTJ@FEFG@W@KAIFQBOJS@KE","30":"NA","31":"10.6740","32":"2717","33":"COVID walk with Nani","34":"0","35":"0","36":"FALSE","37":"2","38":"Walk","39":"2023-12-28T06:56:34Z","40":"2023-12-28T17:56:34Z","41":"-33.71860","42":"151.1500","43":"(GMT+10:00) Australia/Sydney","44":"54.4","45":"0","46":"FALSE","47":"Walk","48":"11182369841","49":"11182369841","50":"39600","51":"everyone","52":"NA","53":"NA","54":"NA","55":"NA","56":"NA","57":"NA","_rn_":"1"},{"1":"4","2":"31921497","3":"1","4":"1","5":"NA","6":"10.1556","7":"0","8":"FALSE","9":"FALSE","10":"10.0859","11":"3601","12":"169.7","13":"85.3","14":"-33.71714","15":"151.1527","16":"AAF9D3E6-421B-4D8F-9E07-7C7748812273-activity.fit","17":"FALSE","18":"FALSE","19":"g14059828","20":"FALSE","21":"FALSE","22":"FALSE","23":"10436921535","24":"0","25":"Australia","26":"FALSE","27":"a10436921535","28":"2","29":"`uxlEsnpy[LD^En@S\\\\?HMCKi@[GQEYGKo@Yc@IcA]c@WSQOe@EcAOiAMUYQiBaBa@Qi@Aq@o@KGQAOB]\\\\OBMEc@k@{@{@KOGc@Uc@QOOE[Y_@K[Ui@O_ABu@HSIWe@UOa@CWFUPk@?aA]S@yAYuACo@SWA[Qg@OeAZOBSHa@DOJa@F[?gA_@Qi@MQUC[Be@EsAL_@AYA_@Qi@EkAU]Wm@SIIi@w@}@wBa@UGKEe@@YE]UGQBKJKTq@`@_@HcCQMECEM_@Gg@Uq@UUOEe@A[E[a@a@[s@uAIQBGn@RXf@HBXRh@HrAE`A\\\\R?XMVEd@[j@Un@g@HSTO^Gf@DLE`A?fBNvBFvBx@lATRHL?\\\\Pr@z@z@R~@Jd@CRGLS@k@DUNqD?UFi@B_ADUAq@ESKOs@c@[w@eBqAWQIA_Aw@{@cBOQIUKu@i@m@QYm@sAc@e@o@c@qAoAa@Q]WY_@iAg@{Cg@wCu@_AKmC?sDa@kB@qBWWBm@E[B}@GgAOqAc@m@Ia@Qm@KsAk@i@[iB_@[Ea@UQE_AISMKWXXbAN~@X`AHlA`@nAl@v@Rv@f@b@Bd@LNLHh@@r@Av@w@`HCtAC^CFGY?e@RcBBaAVmAFkBHc@@c@DUFIf@@h@EdANt@A|AHf@A`@HnAJZ?`@FrADh@Hp@BzA?v@Fl@Tt@HbDx@n@JdAb@x@v@VLjAdAl@^lAxAVp@f@|@n@dBdA~ARLNT^JXd@b@Xh@Vh@n@l@Vl@j@JVKfC@NSdBKrAEvAMVi@LmAGq@Oc@Q]k@MMu@Mq@[uBs@c@EkDEoAQaAC_@Nu@p@}@`@]Fq@V[V[FGC_@[MEY?aAJQCc@Wm@q@SIYC@Nl@bAx@bANJv@DRNb@f@J`@Fh@FTLJTLvABVIh@a@\\\\e@JEb@?XZHn@DHVf@b@b@l@bABTh@~@LLb@Pn@`@hATdA^`@@rAO`@Fv@?LLPf@FFrARd@En@OPMj@Kv@Eh@PVRt@Cd@B^Ar@LZNrAFj@L\\\\CLBn@KXALDDHb@\\\\FLPFpAO^Dp@Xn@d@TFb@TV\\\\BNTl@JHjApAXFp@[\\\\B~@p@RH`@BVV","30":"NA","31":"15.6744","32":"3575","33":"Aaaand I have COVID","34":"0","35":"1","36":"FALSE","37":"2","38":"TrailRun","39":"2023-12-26T03:20:44Z","40":"2023-12-26T14:20:44Z","41":"-33.71872","42":"151.1500","43":"(GMT+10:00) Australia/Sydney","44":"154.1","45":"0","46":"FALSE","47":"Run","48":"11170114338","49":"11170114338","50":"39600","51":"everyone","52":"NA","53":"NA","54":"NA","55":"NA","56":"NA","57":"0","_rn_":"2"},{"1":"0","2":"31921497","3":"1","4":"1","5":"NA","6":"8.8884","7":"0","8":"FALSE","9":"FALSE","10":"1.0023","11":"448","12":"118.0","13":"85.3","14":"-33.71783","15":"151.1520","16":"9ED2688F-655C-4F5C-B731-26A44FF4C922-activity.fit","17":"FALSE","18":"FALSE","19":"g14059828","20":"FALSE","21":"FALSE","22":"FALSE","23":"10432812925","24":"0","25":"Australia","26":"FALSE","27":"a10432812925","28":"2","29":"j{vlEelqy[F@FMN?DB`@LJEl@i@TANGHIHE\\\\?`@IN?VHn@h@F@rAKH@DB\\\\B`@Hr@FRJp@HLDL@n@Tf@WJONGHDBAJBh@v@PPF@TIZGf@GP?PDj@XF?TPN@`@ZTJNNLRNn@TZj@h@HTNNJFJ?HAROLQj@Bj@t@TFf@@JDfAhAd@XLNPVL`@","30":"NA","31":"16.6068","32":"406","33":"Afternoon Trail Run","34":"0","35":"0","36":"FALSE","37":"2","38":"TrailRun","39":"2023-12-25T03:56:58Z","40":"2023-12-25T14:56:58Z","41":"-33.70950","42":"151.1548","43":"(GMT+10:00) Australia/Sydney","44":"35.2","45":"0","46":"FALSE","47":"Run","48":"11165803755","49":"11165803755","50":"39600","51":"everyone","52":"NA","53":"NA","54":"NA","55":"NA","56":"NA","57":"0","_rn_":"3"},{"1":"0","2":"31921497","3":"1","4":"1","5":"NA","6":"12.5352","7":"0","8":"FALSE","9":"FALSE","10":"3.0675","11":"881","12":"126.5","13":"85.3","14":"-33.70805","15":"151.1553","16":"C64E3F45-3D44-47F6-8184-9A9E5FA2D42A-activity.fit","17":"FALSE","18":"FALSE","19":"g14059828","20":"FALSE","21":"FALSE","22":"FALSE","23":"10432803321","24":"0","25":"Australia","26":"FALSE","27":"a10432803321","28":"2","29":"luxlEanpy[ZAj@[f@CDE?Kg@UMq@IKMAa@Um@Si@WWEYKWUKiAA_@Ik@Qm@m@y@OMc@UYWWQkAK[c@e@WS?_@`@QBQAGEUa@e@m@OIQQIs@QYiAw@]Ks@a@WA[Aa@BYLM@QIS[[SE@QEe@HQFQ@_@EW?[OUC_@?a@Ic@OSCO@YA_AO[Aa@SSEy@Bc@REAYDa@Vg@LUC{@SWMCEAUEOa@KOAYB_@CWD[Ae@F{@AKIi@Si@aAqBoBQi@AM@SGWMQQMG[Q]Qw@EY@i@?EHQJMCGGCUE[?[HYFKD[Hm@f@g@T}@?KEQYO_@EYe@g@e@K_@DSDy@?c@_@OYc@YG?MGf@hAJF\\\\b@TPPVLFVFd@D`@ZDJJ`@Hl@B\\\\@DDBPFj@J\\\\CPBRCTKLOJGh@q@ZKTBHFLVHf@JXLLRLJLn@xBP`@TZt@`@`AVRJbARL?","30":"NA","31":"18.4032","32":"881","33":"Afternoon Trail Run","34":"0","35":"0","36":"FALSE","37":"2","38":"TrailRun","39":"2023-12-25T03:39:49Z","40":"2023-12-25T14:39:49Z","41":"-33.71879","42":"151.1499","43":"(GMT+10:00) Australia/Sydney","44":"39.8","45":"0","46":"FALSE","47":"Run","48":"11165793337","49":"11165793337","50":"39600","51":"everyone","52":"NA","53":"NA","54":"NA","55":"NA","56":"NA","57":"0","_rn_":"4"},{"1":"0","2":"31921497","3":"1","4":"1","5":"NA","6":"2.9988","7":"0","8":"FALSE","9":"FALSE","10":"12.0000","11":"14400","12":"NA","13":"NA","14":"NA","15":"NA","16":"NA","17":"FALSE","18":"FALSE","19":"g14059828","20":"FALSE","21":"FALSE","22":"FALSE","23":"10432438711","24":"0","25":"Australia","26":"TRUE","27":"a10432438711","28":"2","29":"","30":"NA","31":"0.0000","32":"14400","33":"Walk around the city w/ Ari & Shreedhar","34":"0","35":"0","36":"FALSE","37":"2","38":"Walk","39":"2023-12-24T02:00:00Z","40":"2023-12-24T13:00:00Z","41":"NA","42":"NA","43":"(GMT+10:00) Australia/Sydney","44":"100.0","45":"0","46":"FALSE","47":"Walk","48":"NA","49":"NA","50":"39600","51":"everyone","52":"NA","53":"NA","54":"NA","55":"NA","56":"NA","57":"NA","_rn_":"5"},{"1":"0","2":"31921497","3":"1","4":"1","5":"NA","6":"2.8008","7":"0","8":"FALSE","9":"FALSE","10":"14.0000","11":"18000","12":"NA","13":"NA","14":"NA","15":"NA","16":"NA","17":"FALSE","18":"FALSE","19":"g14059828","20":"FALSE","21":"FALSE","22":"FALSE","23":"10432437449","24":"0","25":"Australia","26":"TRUE","27":"a10432437449","28":"2","29":"","30":"NA","31":"0.0000","32":"18000","33":"Hike w/ Ari, Claire, and Shreedhar @ RNP","34":"0","35":"0","36":"FALSE","37":"2","38":"Hike","39":"2023-12-23T00:30:00Z","40":"2023-12-23T11:30:00Z","41":"NA","42":"NA","43":"(GMT+10:00) Australia/Sydney","44":"300.0","45":"0","46":"FALSE","47":"Hike","48":"NA","49":"NA","50":"39600","51":"everyone","52":"NA","53":"NA","54":"NA","55":"NA","56":"NA","57":"NA","_rn_":"6"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>While it’s interesting to see items like the achievement count, average speed, and average heart rate for each activity, this information may not help us get an accurate measure of training load. One of the more well-known measures of training load is the TRIMP (training impulse) value, which estimates training load by multiplying the number of minutes the activity took by the average heart rate during it.</p>
<p>To get a better intuition for why I believe activity-level data to be important for measuring training load, consider two workouts: one a high-intensity sprint session focusing on 400m intervals with a long recovery; the other a typical easy ‘Zone 2’ aerobic workout. These two workouts could, in theory, be of the same duration, cover the same amount of distance, and even end up having similar average heart rates - but their training effects, and subsequently the toll they take on the body, are markedly different.</p>
<p>Therefore, I want activity-level data - which is typically collected at the interval of 1 second from most sports watches.</p>
</section>
<section id="activity-level-data" class="level2">
<h2 class="anchored" data-anchor-id="activity-level-data">Activity-level data</h2>
<p>Fortunately, there’s a command that allows us to access this information.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb5" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb5-1"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_streams</span>(stoken,</span>
<span id="cb5-2">            <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"activity id here"</span>)</span></code></pre></div>
</details>
</div>
<p>However, getting the data for each of the 412 activities I have on Strava using this process would take some time. So, let’s automate it!</p>
<p>First, let’s create a smaller version of the dataset to make sure that we don’t have any errors before bombarding the API with bad requests.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb6" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb6-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># A smaller version of our dataset</span></span>
<span id="cb6-2"></span>
<span id="cb6-3">mini <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(activity.list, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb6-4"></span>
<span id="cb6-5"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run a function from rows 1:5 of the mini dataframe, using the activity 'id' column as our index. </span></span>
<span id="cb6-6"></span>
<span id="cb6-7">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(mini), <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(i) {</span>
<span id="cb6-8">  </span>
<span id="cb6-9">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_streams</span>(stoken, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> mini<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[i])</span>
<span id="cb6-10">  </span>
<span id="cb6-11">})</span></code></pre></div>
</details>
</div>
<p>Fortunately we did this with a smaller dataset, because - using my data, at least - there’s already an error!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb7" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb7-1">Error <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_streams</span>(stoken, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> mini<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[i]) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span> Not <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Found</span> (HTTP <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">404</span>).</span></code></pre></div>
</details>
</div>
<p>A problem with this function is that there’s no way to know which of the 5 activities we requested caused this problem. Although, this provides us with the opportunity to use a command that I’ve found myself relying on a lot lately: <code>tryCatch()</code>. This function allows for two main possibilities:</p>
<ol type="1">
<li>The omission of data causing an error, allowing the command to run without halting.</li>
<li>Understanding which cases are causing the problem.</li>
</ol>
<p>In this instance, I want to understand what’s going wrong with the non-functional ‘id’ variables to make sure that there aren’t problems in the future and to prevent sending a tonne of bad requests to the API.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb8" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb8-1">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(mini), <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(i) {</span>
<span id="cb8-2"></span>
<span id="cb8-3">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># 'tries' to run this function</span></span>
<span id="cb8-4">    </span>
<span id="cb8-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>({</span>
<span id="cb8-6">    </span>
<span id="cb8-7">    temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_streams</span>(stoken, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> mini<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[i])</span>
<span id="cb8-8">    </span>
<span id="cb8-9">  },</span>
<span id="cb8-10">  </span>
<span id="cb8-11">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># if an error occurs, provides the following output</span></span>
<span id="cb8-12">  </span>
<span id="cb8-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(error) {</span>
<span id="cb8-14">    </span>
<span id="cb8-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error at index:"</span>, i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">cat</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error message:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conditionMessage</span>(error), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb8-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)  </span>
<span id="cb8-18">    </span>
<span id="cb8-19">  }</span>
<span id="cb8-20">  )</span>
<span id="cb8-21">}) </span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>Error at index: 5 
Error message: Not Found (HTTP 404). </code></pre>
</div>
</div>
<p>Outstanding! We now have the data from the first four activities, but we’re also able to see that activity 5 in this dataframe is causing the error. A brief inspection shows that the error is likely due to these activities being manually uploaded - a symptom of a broken Garmin watch, and missing several key variables of importance!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb10" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb10-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Look at a valid row (4) and an invalid row (5)</span></span>
<span id="cb10-2"></span>
<span id="cb10-3">mini[<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">4</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>),] <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb10-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, manual, max_speed, start_latlng1)</span></code></pre></div>
</details>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":[""],"name":["_rn_"],"type":[""],"align":["left"]},{"label":["id"],"name":[1],"type":["dbl"],"align":["right"]},{"label":["manual"],"name":[2],"type":["chr"],"align":["left"]},{"label":["max_speed"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["start_latlng1"],"name":[4],"type":["dbl"],"align":["right"]}],"data":[{"1":"10432803321","2":"FALSE","3":"18.4032","4":"-33.71879","_rn_":"4"},{"1":"10432438711","2":"TRUE","3":"0.0000","4":"NA","_rn_":"5"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>To confirm this hypothesis, we can run the function over some manually uploaded activities to see if any of them are able to produce a valid result.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb11" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb11-1">manual_test <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> activity.list <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(manual <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRUE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(., <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb11-4"></span>
<span id="cb11-5">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(manual_test), <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(i) {</span>
<span id="cb11-6">  </span>
<span id="cb11-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">tryCatch</span>({</span>
<span id="cb11-8">    </span>
<span id="cb11-9">    temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_streams</span>(stoken, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> manual_test<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[i])</span>
<span id="cb11-10">    </span>
<span id="cb11-11">  },</span>
<span id="cb11-12">  </span>
<span id="cb11-13">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">error =</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(error) {</span>
<span id="cb11-14">    </span>
<span id="cb11-15">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error at index:"</span>, i, <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-16">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">paste</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Error message:"</span>, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">conditionMessage</span>(error), <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">\n</span><span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"</span>)</span>
<span id="cb11-17">    <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">return</span>(<span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NULL</span>)  </span>
<span id="cb11-18">    </span>
<span id="cb11-19">  }</span>
<span id="cb11-20">  )</span>
<span id="cb11-21">}) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb11-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>()</span>
<span id="cb11-23"></span>
<span id="cb11-24"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(data)</span></code></pre></div>
</details>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[],"data":[],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p><br></p>
<p>Not a single valid result. Well, at least that was an easy fix! Now, let’s create a dataframe which omits these activities, and to be proactive let’s remove activities without a set of latitude/longitude coordinates and heart rate data (as we might want to explore these later on), and any activities that aren’t runs.<sup>4</sup></p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb12" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb12-1">activities <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> activity.list <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(manual <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!=</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"TRUE"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-3">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(start_latlng1),</span>
<span id="cb12-4">         <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">!</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(max_heartrate)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb12-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">grepl</span>(<span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Run"</span>, sport_type))</span>
<span id="cb12-6"></span>
<span id="cb12-7">mini<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span> <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(activities, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">5</span>)</span>
<span id="cb12-8"></span>
<span id="cb12-9"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Run a function from rows 1:5 of the mini dataframe, using the activity 'id' column as our index. </span></span>
<span id="cb12-10"></span>
<span id="cb12-11">data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lapply</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(mini<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span>), <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">function</span>(i) {</span>
<span id="cb12-12">  </span>
<span id="cb12-13">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_streams</span>(stoken, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> mini<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[i])</span>
<span id="cb12-14">  </span>
<span id="cb12-15">})</span></code></pre></div>
</details>
</div>
</section>
<section id="wrangling-and-tidying-the-data" class="level2">
<h2 class="anchored" data-anchor-id="wrangling-and-tidying-the-data">Wrangling and tidying the data</h2>
<p>We have now - in theory - some working code to pull activity-level data from Strava’s API. Let’s see what one of the elements from our dataset looks like.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb13" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb13-1">temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_streams</span>(stoken, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> mini<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">.1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb13-2"></span>
<span id="cb13-3"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summary</span>(temp)</span></code></pre></div>
</details>
<div class="cell-output cell-output-stdout">
<pre><code>      Length Class  Mode
 [1,] 5      -none- list
 [2,] 5      -none- list
 [3,] 5      -none- list
 [4,] 5      -none- list
 [5,] 5      -none- list
 [6,] 5      -none- list
 [7,] 5      -none- list
 [8,] 5      -none- list
 [9,] 5      -none- list
[10,] 5      -none- list</code></pre>
</div>
</div>
<p>Hmmm - that’s not a particularly nice structure for analysis, so let’s tidy it up a little. First, we’ll transpose the set of lists and convert them to a tibble. <sup>5</sup></p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb15" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb15-1">temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-2">  purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transpose</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb15-3">  tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>()</span></code></pre></div>
</details>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["type"],"name":[1],"type":["list"],"align":["right"]},{"label":["data"],"name":[2],"type":["list"],"align":["right"]},{"label":["series_type"],"name":[3],"type":["list"],"align":["right"]},{"label":["original_size"],"name":[4],"type":["list"],"align":["right"]},{"label":["resolution"],"name":[5],"type":["list"],"align":["right"]}],"data":[{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"},{"1":"<chr [1]>","2":"<list [1,604]>","3":"<chr [1]>","4":"<int [1]>","5":"<chr [1]>"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>That’s a bit better, now at least we can begin to work with this data! The next step is keep the ‘type’ and ‘data’ columns and remove everything else, then we should <code>unlist</code> the data and convert 0-length lists to NA values. After this, we can perform some more tidying and add some important variables to make these activities identifiable in the future.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb16" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb16-1">temp.data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-2">  purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transpose</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-3">  tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-4">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(type, data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-5">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(type),</span>
<span id="cb16-6">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">modify_if</span>(.x, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(.) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-7">  </span>
<span id="cb16-8">  <span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># With the data wrangled, let's transform it into a tidy format!</span></span>
<span id="cb16-9">  </span>
<span id="cb16-10">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-11">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-12">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_at</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>latlng), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(.)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-13">  tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_wider</span>(latlng, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb16-14">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">activity =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,</span>
<span id="cb16-15">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> mini<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>])</span>
<span id="cb16-16"></span>
<span id="cb16-17"><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">head</span>(temp.data)</span></code></pre></div>
</details>
<div class="cell-output-display">

<div data-pagedtable="false">
  <script data-pagedtable-source="" type="application/json">
{"columns":[{"label":["altitude"],"name":[1],"type":["dbl"],"align":["right"]},{"label":["cadence"],"name":[2],"type":["int"],"align":["right"]},{"label":["distance"],"name":[3],"type":["dbl"],"align":["right"]},{"label":["grade_smooth"],"name":[4],"type":["dbl"],"align":["right"]},{"label":["heartrate"],"name":[5],"type":["int"],"align":["right"]},{"label":["latlng_1"],"name":[6],"type":["dbl"],"align":["right"]},{"label":["latlng_2"],"name":[7],"type":["dbl"],"align":["right"]},{"label":["moving"],"name":[8],"type":["lgl"],"align":["right"]},{"label":["temp"],"name":[9],"type":["int"],"align":["right"]},{"label":["time"],"name":[10],"type":["int"],"align":["right"]},{"label":["velocity_smooth"],"name":[11],"type":["dbl"],"align":["right"]},{"label":["activity"],"name":[12],"type":["dbl"],"align":["right"]},{"label":["id"],"name":[13],"type":["dbl"],"align":["right"]}],"data":[{"1":"52.2","2":"53","3":"0.0","4":"0.0","5":"106","6":"-33.76342","7":"151.1133","8":"FALSE","9":"20","10":"0","11":"0.000","12":"1","13":"10448718656"},{"1":"52.2","2":"53","3":"3.6","4":"0.0","5":"105","6":"-33.76344","7":"151.1133","8":"TRUE","9":"20","10":"1","11":"0.000","12":"1","13":"10448718656"},{"1":"52.2","2":"53","3":"5.9","4":"3.3","5":"105","6":"-33.76346","7":"151.1132","8":"TRUE","9":"20","10":"2","11":"2.975","12":"1","13":"10448718656"},{"1":"52.2","2":"83","3":"9.1","4":"5.2","5":"104","6":"-33.76347","7":"151.1132","8":"TRUE","9":"20","10":"3","11":"3.030","12":"1","13":"10448718656"},{"1":"52.6","2":"84","3":"12.2","4":"11.4","5":"105","6":"-33.76349","7":"151.1132","8":"TRUE","9":"20","10":"4","11":"3.050","12":"1","13":"10448718656"},{"1":"52.8","2":"83","3":"15.2","4":"15.2","5":"107","6":"-33.76351","7":"151.1132","8":"TRUE","9":"20","10":"5","11":"3.038","12":"1","13":"10448718656"}],"options":{"columns":{"min":{},"max":[10]},"rows":{"min":[10],"max":[10]},"pages":{}}}
  </script>
</div>
</div>
</div>
<p>Perfect! We now have that all-important heart rate data, along with a few other useful variables for some later analysis!</p>
</section>
<section id="api-request-limits" class="level2">
<h2 class="anchored" data-anchor-id="api-request-limits">API Request limits</h2>
<p>We’re almost there, we just need to ask the API for this data and combine it. However, the next problem we face comes from Strava’s API architecture:</p>
<div class="quarto-figure quarto-figure-center">
<figure class="figure">
<p><img src="https://luke-ashton.netlify.app/posts/strava-api-analysis/images/request_limits_ugh.png" class="img-fluid figure-img"></p>
<figcaption class="figure-caption">API Request limits can be a problem when you don’t pay-to-play.</figcaption>
</figure>
</div>
<p>After filtering my activities, I still have to make 308 requests through the API, which means that we’ll have to create a function which knows to stop sending requests for a 15-minute period once we approach that 200 request limit, and once that time has passed can resume with the remaining requests.</p>
<p>Ideally, this function would be able to work with a request of any number of items, not just my 308. I’ve created something that should work for this task using a modulus operator and a <code>Sys.sleep</code> command. If you’re going to run it yourself, be mindful that this function will take 15 minutes per 180 activities<sup>6</sup>!</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb17" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb17-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># First, create an empty list that will store each request</span></span>
<span id="cb17-2">result_list <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">list</span>()</span>
<span id="cb17-3">batches <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> (<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(activities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%/%</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">180</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span></span>
<span id="cb17-4">cases_per_batch <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(activities) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> batches</span>
<span id="cb17-5"></span>
<span id="cb17-6"></span>
<span id="cb17-7"><span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">for</span> (i <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">in</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">:</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">nrow</span>(activities)) {</span>
<span id="cb17-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">Sys.sleep</span>(<span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">if</span> (i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%%</span> cases_per_batch <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&amp;</span> </span>
<span id="cb17-9">                i <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">&gt;</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>) <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">900</span> <span class="cf" style="color: #003B4F;
background-color: null;
font-style: inherit;">else</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>)</span>
<span id="cb17-10"></span>
<span id="cb17-11">  temp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">get_streams</span>(stoken, activities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[i])</span>
<span id="cb17-12"></span>
<span id="cb17-13">  data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> temp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-14">    purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">transpose</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-15">    tibble<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as_tibble</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-16">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(type, data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-17">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">type =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(type),</span>
<span id="cb17-18">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> purrr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">map</span>(data, <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">replace</span>(.x, <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">length</span>(.x) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="cn" style="color: #8f5902;
background-color: null;
font-style: inherit;">NA</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-19">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">spread</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">data =</span> ., <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">key =</span> type, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">value =</span> data) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-20">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">cols =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">everything</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-21">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate_at</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">vars</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span>latlng), <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unlist</span>(.)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-22">    tidyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unnest_wider</span>(latlng, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">names_sep =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"_"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-23">    dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">activity =</span> i,</span>
<span id="cb17-24">                  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">id =</span> activities<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">$</span>id[i])</span>
<span id="cb17-25">  </span>
<span id="cb17-26">  result_list[[i]] <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> data</span>
<span id="cb17-27">}</span>
<span id="cb17-28"></span>
<span id="cb17-29">df <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> result_list <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb17-30">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">bind_rows</span>() </span>
<span id="cb17-31"></span>
<span id="cb17-32"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Now, I'm going to save this dataset, so I don't have to run this call again and waste 16 minutes of my life!</span></span>
<span id="cb17-33"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># save(df, file = "data/all_activities.RData")</span></span></code></pre></div>
</details>
</div>
</section>
<section id="creating-a-measure-of-training-load" class="level2">
<h2 class="anchored" data-anchor-id="creating-a-measure-of-training-load">Creating a measure of training load!</h2>
<p>For quantifying training load, let’s use a modified version of the Training Impulse (TRIMP) formula <span class="citation" data-cites="morton1990modeling">(see Morton, Fitz-Clarke, and Banister 1990)</span>. This version incorporates an individual weighting factor and accounts for different resting and maximum heart rates. It also has a non-linear term to try to capture the phenomena that higher heart rates are more fatiguing / indicative of a higher training load.</p>
<p>Also, as mentioned before, rather than use the average heart rate method, we’ll create a measure for each observation of heart rate data. This means that we will need to create a few new variables in our dataset.</p>
<ul>
<li>the change in time between observations - (d.time)</li>
<li>the athlete’s resting and maximum heart rates</li>
<li>the specific heart rate reserve (HRR) for each heart rate measure <sup>7</sup></li>
<li>the TRIMP value for each heart rate observation, converted to a value per minute <sup>8</sup></li>
<li>some values for day, week, month, and year</li>
</ul>
<p>We can also use the activity ‘id’ variable to include some of the aggregated data for each activity.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb18" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb18-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Select aggregated activity variables</span></span>
<span id="cb18-2"></span>
<span id="cb18-3">activity.variables <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> activity.list <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(id, total_elevation_gain, </span>
<span id="cb18-5">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">activity_distance =</span> distance,</span>
<span id="cb18-6">         average_speed, max_speed,</span>
<span id="cb18-7">         <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">date =</span> start_date_local)</span>
<span id="cb18-8"></span>
<span id="cb18-9">df1 <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">arrange</span>(activity, time) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">left_join</span>(activity.variables) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(activity) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb18-13">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mutate</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">activity_time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">max</span>(time),</span>
<span id="cb18-14">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d.time =</span> time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">lag</span>(time),</span>
<span id="cb18-15">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">d.time =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ifelse</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">is.na</span>(d.time), <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, d.time),</span>
<span id="cb18-16">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">rest_hr =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">55</span>,</span>
<span id="cb18-17">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">max_hr =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">190</span>,</span>
<span id="cb18-18">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">HRR =</span> ((heartrate <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> rest_hr) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> (max_hr <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">-</span> rest_hr)),</span>
<span id="cb18-19">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIMP =</span> (d.time <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">/</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">60</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> HRR <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> (<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">0.64</span><span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">exp</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>))<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">^</span>(<span class="fl" style="color: #AD0000;
background-color: null;
font-style: inherit;">1.92</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">*</span> HRR),</span>
<span id="cb18-20">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">TRIMP_session =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(TRIMP, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb18-21">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">year =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">year</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(date)),</span>
<span id="cb18-22">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">month =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">month</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(date)),</span>
<span id="cb18-23">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">day =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">weekdays</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">as.POSIXct</span>(date)),</span>
<span id="cb18-24">                <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">week =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">isoweek</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ymd_hms</span>(date)))</span></code></pre></div>
</details>
</div>
</section>
<section id="plotting-our-data" class="level2">
<h2 class="anchored" data-anchor-id="plotting-our-data">Plotting our data</h2>
<p>First, let’s create a modified version of the dataset to provide some general insights. Now that we have a more accurate version of activity-level training load, we can re-aggregate the data for plotting.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb19" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb19-1">plotting_data <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> df1 <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">select</span>(activity, date, activity_distance, </span>
<span id="cb19-3">         average_speed, max_speed, activity_time, </span>
<span id="cb19-4">         TRIMP_session, year, month, day, week) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb19-5">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">unique</span>()</span></code></pre></div>
</details>
</div>
<p>Okay, now let’s create a plot to look at our training load over the years we have data available for. This will allow us to assess our consistency and see trends in our training.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb20" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb20-1">plotting_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb20-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year, week) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb20-3">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weekly_TRIMP =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(TRIMP_session, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb20-4"></span>
<span id="cb20-5">    </span>
<span id="cb20-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> week, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> weekly_TRIMP, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(year))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-8">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> ggokabeito<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">palette_okabe_ito</span>()) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb20-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb20-11">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb20-12">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb20-13">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Weekly training load (TRIMPexp) over the years"</span>,</span>
<span id="cb20-15">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Week of the year"</span>,</span>
<span id="cb20-16">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Weekly training load"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb20-17">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> year, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">scales =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"fixed"</span>)</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://luke-ashton.netlify.app/posts/strava-api-analysis/index_files/figure-html/unnamed-chunk-21-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>Well, that’s not great… where’s 2020 and 2022? In my defence, I did run throughout the back half of 2023 but didn’t record these sessions because my Garmin watch broke, and I haven’t gotten around to having it fixed yet. So that’s a good lesson: you can’t analyse or evaluate data that you don’t have!</p>
<p>Perhaps, it would be more useful to look at the data from 2018 and the start of 2019, where I was somewhat more consistent with my training. First, let’s re-plot the weekly training load data from 2018 and 2019, and then we can look at the average speed of all workouts each week during this time period, too. It might also be fun to use a slightly different ‘geom’ for each plot.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb21" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb21-1">plot_trimp <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> plotting_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2018</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> </span>
<span id="cb21-3">           year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2019</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year, week) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-5">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weekly_TRIMP =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(TRIMP_session, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-6">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb21-7"></span>
<span id="cb21-8">    </span>
<span id="cb21-9">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> week, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> weekly_TRIMP, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">fill =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(year))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_col</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_fill_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> ggokabeito<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">palette_okabe_ito</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb21-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb21-15">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb21-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb21-17">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-18">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Weekly TRIMP across 2018 and 2019"</span>,</span>
<span id="cb21-19">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Week of the year"</span>,</span>
<span id="cb21-20">       <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Weekly training load"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb21-21">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> year)</span>
<span id="cb21-22"></span>
<span id="cb21-23">plot_trimp</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://luke-ashton.netlify.app/posts/strava-api-analysis/index_files/figure-html/unnamed-chunk-22-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb22" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb22-1">plot_speed <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> plotting_data <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-2">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">filter</span>(year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2018</span> <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">|</span> </span>
<span id="cb22-3">           year <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">==</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2019</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-4">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">group_by</span>(year, week) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-5">  dplyr<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">summarise</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">weekly_TRIMP =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">sum</span>(TRIMP_session, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T),</span>
<span id="cb22-6">                   <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">average_speed =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">mean</span>(average_speed, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">na.rm =</span> T)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-7">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ungroup</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">%&gt;%</span></span>
<span id="cb22-8"></span>
<span id="cb22-9">    </span>
<span id="cb22-10">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">ggplot</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">aes</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> week, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> average_speed, <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">colour =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">factor</span>(year))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-11">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">geom_point</span>() <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-12">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">scale_colour_manual</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">values =</span> ggokabeito<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">::</span><span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">palette_okabe_ito</span>(<span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>,<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">2</span>))) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-13">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">coord_cartesian</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">xlim =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">c</span>(<span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">0</span>, <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">52</span>)) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-14">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme_minimal</span>()  <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-15">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">theme</span>(</span>
<span id="cb22-16">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.position =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"none"</span>,</span>
<span id="cb22-17">    <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">legend.title =</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">element_blank</span>()</span>
<span id="cb22-18">  ) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> </span>
<span id="cb22-19">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">labs</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">title =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Average weekly speed of runs across 2018 and 2019"</span>,</span>
<span id="cb22-20">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">x =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Week of the year"</span>,</span>
<span id="cb22-21">  <span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">y =</span> <span class="st" style="color: #20794D;
background-color: null;
font-style: inherit;">"Weekly average speed (km/h)"</span>) <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span></span>
<span id="cb22-22">  <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">facet_wrap</span>(<span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">~</span> year)</span>
<span id="cb22-23"></span>
<span id="cb22-24">plot_speed</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://luke-ashton.netlify.app/posts/strava-api-analysis/index_files/figure-html/unnamed-chunk-23-1.png" class="img-fluid" width="672"></p>
</div>
</div>
<p>It looks like there’s a relationship between consistent training and the average weekly speed of workouts. Hmmmm, who would have thought? However, to make this a little bit clearer we can plot these two figures together using the <code>patchwork</code> library.</p>
<div class="cell">
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb23" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb23-1">combined_plot <span class="ot" style="color: #003B4F;
background-color: null;
font-style: inherit;">&lt;-</span> plot_trimp <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> plot_speed <span class="sc" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">+</span> <span class="fu" style="color: #4758AB;
background-color: null;
font-style: inherit;">plot_layout</span>(<span class="at" style="color: #657422;
background-color: null;
font-style: inherit;">ncol =</span> <span class="dv" style="color: #AD0000;
background-color: null;
font-style: inherit;">1</span>)</span>
<span id="cb23-2"></span>
<span id="cb23-3">combined_plot</span></code></pre></div>
</details>
<div class="cell-output-display">
<p><img src="https://luke-ashton.netlify.app/posts/strava-api-analysis/index_files/figure-html/unnamed-chunk-24-1.png" class="img-fluid" width="672"></p>
</div>
<details open="">
<summary>Code</summary>
<div class="sourceCode cell-code" id="cb24" style="background: #f1f3f5;"><pre class="sourceCode r code-with-copy"><code class="sourceCode r"><span id="cb24-1"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># Let's save this to use as the image for the post! </span></span>
<span id="cb24-2"></span>
<span id="cb24-3"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;"># ggsave(combined_plot, file = "images/combined_plot.png",</span></span>
<span id="cb24-4"><span class="co" style="color: #5E5E5E;
background-color: null;
font-style: inherit;">#        height = 6, width = 8, units = "in")</span></span></code></pre></div>
</details>
</div>
<p>Not bad. While there’s plenty more analysis to undertake, this post is already much longer than anticipated due to the intricacies of working with the Strava API, so I think I’ll leave it here for now and dive into this data in more detail later.</p>
</section>
<section id="takeaways-goals-for-the-new-year" class="level2">
<h2 class="anchored" data-anchor-id="takeaways-goals-for-the-new-year">Takeaways &amp; goals for the New Year</h2>
<p>So, it’s clear that I’ve been terribly inconsistent with my aerobic training. However, I don’t record data for my resistance training anymore, so there’s no way to tell how inconsistent I’ve been with that. Although, I’ve probably been training with weights, on average, twice per week for the past few years.</p>
<p>For 2024, I have ideas of an ironman distance triathlon and my first 100 miler run floating around in my mind, but let’s start with the basics: consistency. Perhaps 3 resistance training sessions per week and building up to a few hours of aerobic training each week across some runs, a cycle, and a swim.</p>



</section>


<div id="quarto-appendix" class="default"><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">References</h2><div id="refs" class="references csl-bib-body hanging-indent">
<div id="ref-morton1990modeling" class="csl-entry">
Morton, R Hugh, John R Fitz-Clarke, and Eric W Banister. 1990. <span>“Modeling Human Performance in Running.”</span> <em>Journal of Applied Physiology</em> 69 (3): 1171–77.
</div>
</div></section><section id="footnotes" class="footnotes footnotes-end-of-document"><h2 class="anchored quarto-appendix-heading">Footnotes</h2>

<ol>
<li id="fn1"><p>or perhaps the past few years…↩︎</p></li>
<li id="fn2"><p>This assumes that you already have a Strava account.↩︎</p></li>
<li id="fn3"><p>I assume this is a requirement intended for the more serious app developers, rather than the hobbyist analysts.↩︎</p></li>
<li id="fn4"><p>It appears that I have a few cross country ski activities and hikes in here!↩︎</p></li>
<li id="fn5"><p>I’m going to call each library in this tidying step, as we’ll be incorporating this code into a bigger function later on.↩︎</p></li>
<li id="fn6"><p>I use 180 requests instead of 200 to allow for some wiggle room, in case you need to make some changes to your code, or want to make another small request.↩︎</p></li>
<li id="fn7"><p>This can be calculated using the following formula: <img src="https://latex.codecogs.com/png.latex?%20((heart%5C:rate%20-%20resting%5C:heart%5C:rate)%20/%20(max%5C:heart%5C:rate%20-%20resting%5C:heart%5C:rate))%20">↩︎</p></li>
<li id="fn8"><p>This can be calculated using the following formula: <img src="https://latex.codecogs.com/png.latex?%20TRIMP%20=%20(d.time%20/%2060)%20*%20HRR%20*%20(0.64e%20%5E%7B1.92%20*%20HRR%7D%20)%20">↩︎</p></li>
</ol>
</section><section class="quarto-appendix-contents"><h2 class="anchored quarto-appendix-heading">Citation</h2><div><div class="quarto-appendix-secondary-label">BibTeX citation:</div><pre class="sourceCode code-with-copy quarto-appendix-bibtex"><code class="sourceCode bibtex">@online{ashton2023,
  author = {Ashton, Luke},
  title = {Analysing {Strava} Data in {R.}},
  date = {2023-12-29},
  url = {https://luke-ashton.netlify.app/posts/strava-api-analysis},
  langid = {en}
}
</code></pre><div class="quarto-appendix-secondary-label">For attribution, please cite this work as:</div><div id="ref-ashton2023" class="csl-entry quarto-appendix-citeas">
Ashton, Luke. 2023. <span>“Analysing Strava Data in R.”</span> December
29, 2023. <a href="https://luke-ashton.netlify.app/posts/strava-api-analysis">https://luke-ashton.netlify.app/posts/strava-api-analysis</a>.
</div></div></section></div> ]]></description>
  <category>R</category>
  <category>Data analysis</category>
  <category>Tutorial</category>
  <category>Strava</category>
  <category>Sports statistics</category>
  <guid>https://luke-ashton.netlify.app/posts/strava-api-analysis/index.html</guid>
  <pubDate>Thu, 28 Dec 2023 13:00:00 GMT</pubDate>
  <media:content url="https://luke-ashton.netlify.app/posts/strava-api-analysis/images/combined_plot.png" medium="image" type="image/png" height="108" width="144"/>
</item>
</channel>
</rss>
